//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace A_5_Client.ChatServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="A_5_Server", ConfigurationName="ChatServiceReference.IChatServer", CallbackContract=typeof(A_5_Client.ChatServiceReference.IChatServerCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IChatServer {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="A_5_Server/IChatServer/Login")]
        void Login(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="A_5_Server/IChatServer/Login")]
        System.Threading.Tasks.Task LoginAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="A_5_Server/IChatServer/Logout")]
        void Logout(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="A_5_Server/IChatServer/Logout")]
        System.Threading.Tasks.Task LogoutAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="A_5_Server/IChatServer/Talk")]
        void Talk(string name, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="A_5_Server/IChatServer/Talk")]
        System.Threading.Tasks.Task TalkAsync(string name, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="A_5_Server/IChatServer/ShowMessage")]
        void ShowMessage(string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="A_5_Server/IChatServer/ShowUsers")]
        void ShowUsers(string[] users);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="A_5_Server/IChatServer/LoginState")]
        void LoginState(bool state);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServerChannel : A_5_Client.ChatServiceReference.IChatServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServerClient : System.ServiceModel.DuplexClientBase<A_5_Client.ChatServiceReference.IChatServer>, A_5_Client.ChatServiceReference.IChatServer {
        
        public ChatServerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Login(string name) {
            base.Channel.Login(name);
        }
        
        public System.Threading.Tasks.Task LoginAsync(string name) {
            return base.Channel.LoginAsync(name);
        }
        
        public void Logout(string name) {
            base.Channel.Logout(name);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string name) {
            return base.Channel.LogoutAsync(name);
        }
        
        public void Talk(string name, string message) {
            base.Channel.Talk(name, message);
        }
        
        public System.Threading.Tasks.Task TalkAsync(string name, string message) {
            return base.Channel.TalkAsync(name, message);
        }
    }
}
